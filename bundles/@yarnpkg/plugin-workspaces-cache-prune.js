/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-workspaces-cache-prune",
factory: function (require) {
var plugin=(()=>{var k=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var p=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(o,r)=>(typeof require<"u"?require:o)[r]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var W=(t,o)=>{for(var r in o)k(t,r,{get:o[r],enumerable:!0})},v=(t,o,r,s)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of P(o))!S.call(t,n)&&n!==r&&k(t,n,{get:()=>o[n],enumerable:!(s=x(o,n))||s.enumerable});return t};var B=t=>v(k({},"__esModule",{value:!0}),t);var M={};W(M,{default:()=>L});var l=p("fs"),m=p("clipanion"),d=p("@yarnpkg/cli"),e=p("@yarnpkg/core"),f=class extends d.BaseCommand{constructor(){super(...arguments);this.workspaces=m.Option.Rest()}async execute(){let r=await e.Configuration.find(this.context.cwd,this.context.plugins),{project:s,workspace:n}=await e.Project.find(r,this.context.cwd),a;if(this.workspaces.length===0){if(!n)throw new d.WorkspaceRequiredError(s.cwd,this.context.cwd);a=new Set([n])}else a=new Set(this.workspaces.map(c=>s.getWorkspaceByIdent(e.structUtils.parseIdent(c))));for(let c of a)for(let i of e.Manifest.allDependencies)for(let w of c.manifest.getForScope(i).values()){let h=s.tryWorkspaceByDescriptor(w);h!==null&&a.add(h)}let u=await e.Cache.find(r),g=new Map;await s.resolveEverything({cache:u,lockfileOnly:!0,report:new e.ThrowReport});for(let c of s.storedPackages.values())if(!e.structUtils.isVirtualLocator(e.structUtils.makeLocator(c,c.reference)))for(let w of a)w.manifest.hasDependency(c)&&g.set(e.structUtils.slugifyLocator(c),!0);let y=(0,l.readdirSync)(u.cwd);for(let c of y){let i=c.match(/(.*)-.+/);(!i||g.get(i[1])!==!0)&&(0,l.unlinkSync)(`${u.cwd}/${c}`)}console.log("Pruned cache for the current workspace.")}};f.paths=[["workspaces-cache-prune"]];var D={commands:[f]},L=D;return B(M);})();
return plugin;
}
};
